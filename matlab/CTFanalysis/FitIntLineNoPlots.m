function cf_ = FitIntLineNoPlots(x,y,upperLimit,lowerLimit)
%CREATEFIT
%   CREATEFIT(X,Y)


% Data from data set "y vs. x":
%     X = x:
%     Y = y:
%     Unweighted

% Auto-generated by MATLAB on 16-Jun-2011 15:04:15

% Default arguments.
if nargin < 4
    lowerLimit = -10;
end

x = x(:);
y = y(:);

% --- Create fit "fit 1"
fo_ = fitoptions('method','NonlinearLeastSquares','Lower',[0 0 0 lowerLimit lowerLimit lowerLimit lowerLimit lowerLimit lowerLimit 0.00015200000000000000837],'Upper',[upperLimit upperLimit upperLimit upperLimit upperLimit upperLimit upperLimit upperLimit upperLimit 0.00015449999999999998782]);
ok_ = isfinite(x) & isfinite(y);
if ~all( ok_ )
    warning( 'GenerateMFile:IgnoringNansAndInfs',...
        'Ignoring NaNs and Infs in data.' );
end
st_ = [0.85723149109189666905 0.80710848995778283754 0.61563356375509603602 0.65472953790691790221 0.29221618960297668366 0.37122021385674686123 0.79708000477068841061 0.79933879736335800015 0.52786670096744892078 0.00015349999999999999062 ];
set(fo_,'Startpoint',st_);
ft_ = fittype('a*exp(-b2*pf*x^2-b1*sqrt(pf*x^2))*abs(sin(pf*x^2))+c+d*sqrt(pf*x^2)+ee*pf*x^2+f*sqrt(pf*x^2)^3+g*sqrt(pf*x^2)^4+h*sqrt(pf*x^2)^5',...
    'dependent',{'y'},'independent',{'x'},...
    'coefficients',{'a', 'b1', 'b2', 'c', 'd', 'ee', 'f', 'g', 'h', 'pf'});

% Fit this model using new data
cf_ = fit(x(ok_),y(ok_),ft_,fo_);
% Alternatively uncomment the following lines to use coefficients from the
% original fit. You can use this choice to plot the original fit against new
% data.
%    cv_ = { 67.35247061236819377, 1.1689309520566053546, 7.8824124452660304446e-06, 12.416756312056888234, -9.9998081546681518716, 2.222078356133120991, -1.6463001466666293826, 1.1727805205226842222, -0.21654439310043227529, 0.00015429370267833054215};
%    cf_ = cfit(ft_,cv_{:});

