function cf_ = FitIntLineXeno4cell(x,y,SinArgPrefac,LimitMulitplikator)
%CREATEFIT
%   CREATEFIT(X,Y)


% Data from data set "y vs. x":
%     X = x:
%     Y = y:
%     Unweighted

% Auto-generated by MATLAB on 16-Jun-2011 15:04:15


amplitude_start = 600;
offset_start = 50;
lm = LimitMulitplikator;
x = x(:);
y = y(:);
% Limits and start values.
au  = lm*1000;
as  = lm*amplitude_start;
c0l = -lm*9*offset_start;
c0s = lm*amplitude_start;
c0u = lm*10*offset_start;
% wl = 0.99999*SinArgPrefac;
% ws = SinArgPrefac;
% wu = 1.00001*SinArgPrefac;
% p0l = 0;
% p0s = 0.00001;
% p0u = 0.00002;

% --- Create fit "fit 1"
%             a   b1   b2  c0   c1   c2   c3   c4   c5   p0  w
fo_ = fitoptions('method','NonlinearLeastSquares',...
    'Lower',[0    0   0  c0l -Inf -Inf -Inf -Inf -Inf],...
    'Upper',[au  Inf  Inf  c0u  Inf  Inf  Inf  Inf  Inf]);
ok_ = isfinite(x) & isfinite(y);
if ~all( ok_ )
    warning( 'GenerateMFile:IgnoringNansAndInfs',...
        'Ignoring NaNs and Infs in data.' );
end
st_ = [as 0 0 c0s 0 0 0 0 0];
set(fo_,'Startpoint',st_);
ft_ = fittype('a*exp(-b2*x^2-b1*(x))*abs(sin(7.9058e-05*x^2))+(c0+c1*(x)+c2*x^2+c3*(x)^3+c4*x^4+c5*(x)^5)',...
    'dependent',{'y'},'independent',{'x'},...
    'coefficients',{'a', 'b1', 'b2', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5'});

% Fit this model using new data
cf_ = fit(x(ok_),y(ok_),ft_,fo_);
% Alternatively uncomment the following lines to use coefficients from the
% original fit. You can use this choice to plot the original fit against new
% data.
%    cv_ = { 500.03314995121081665, 0.0021425001982369198082, -2.7605468570594461624e-06, 100.03787337526826207, 9.9960901171549387811, -0.27864764985150364263, 0.0030818265841700441185, -1.4827005836753750985e-05, 2.534467419807541046e-08, 0.022785521815780335197, 7.8913884709415124522e-05};
%    cf_ = cfit(ft_,cv_{:});

