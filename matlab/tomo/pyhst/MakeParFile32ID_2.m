function MakeParFile32ID(RotAxisPos,tomoNum,Dimensions,varargin)
% Make par files for all data set contained in IntParentPath/data/. Rotation
% axis is computed automatically using quali images and image correlation.
% The volume to reconstruct can be set as an cell array defining start and
% end voxels.
%
% reconstructed: [[START_VOXEL];[END_VOXEL]]. If 0 the whole volume(s) will
% be reconstructed.
% NumOfFirstAndLastProjection: 1x2-vector, number of the first and the last
% projection that are used for tomographic reconstruction.
% IntParentPath: path to the parent folder containing the subfolders where the
% raw data, the flat-and-dark-field corrected intensities (int), the
% retrieved phases (phase), and the tomographic projections (vol) are
% stored.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% varargin
for nn = 1:2:numel(varargin)
    evalc([varargin{nn} ' = ' mat2str(varargin{nn+1})]);
end
%% Default arguments
if ~exist('ParentPath','var')
    ParentPath = '/mnt/tomoraid-LSDF/tomo/APS_32ID-C_LifeCellImaging_GUP31523_2012-10-13/savedLocally';
end
if ~exist('DataSet','var')
    DataSet = 'Oct11_00-30_wildtype_stage11p0_34p5keV_0700mm_15ms_0834proj_scantime50s_deadtime08min_20ms_open_40ms_close';
end
if ~exist('NumOfFirstAndLastProjection','var')
    NumOfFirstAndLastProjection = [1 833];
end
if ~exist('AngleBetweenProjections','var')
    AngleBetweenProjections = 180/833;
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Volume to reconstruct.
PixelsHor = Dimensions(2);
PixelsVer = Dimensions(1);
START_VOXEL_1 = 1;
START_VOXEL_2 = 1;
START_VOXEL_3 = 1;
END_VOXEL_1   = PixelsHor;
END_VOXEL_2   = PixelsHor;
END_VOXEL_3   = PixelsVer;
% Check paths
CheckTrailingSlash(ParentPath);
CheckTrailingSlash(DataSet);
%% Folder names of different phase retrieval methods.
PhasePath  = [ParentPath 'phase/' DataSet];
CheckTrailingSlash(PhasePath)
PhaseSubDirNames = dir([PhasePath '*alpha*']);
NumPhaseSubFolders = numel(PhaseSubDirNames);
%% Output path.
OutputPath = [ParentPath 'vol/' DataSet];
CheckTrailingSlash(OutputPath)
if ~exist(OutputPath,'dir')
    mkdir(OutputPath);
end
fprintf('\nMAKE PyHST PAR FILE\n')
fprintf('DATA SET: %s\n',DataSet(1:end-1))
fprintf('OUTPUT PATH: %s\n',OutputPath(1:end-1))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% %% Axis of Rotation.
% for tomoNum = 1:NumTomosForRotAxis
%     FILE_PREFIX = sprintf('%s%s/int_',IntParentPath,TomoFolderNames(TomosForRotAxis(tomoNum)).name);
%     im1         = pmedfread(sprintf('%s%04u.edf',FILE_PREFIX,NumOfFirstAndLastProjection(1)))';
%     im2         = fliplr(pmedfread(sprintf('%s%04u.edf',FILE_PREFIX,NumOfFirstAndLastProjection(2)))');
%     out         = ImageCorrelation(im1,im2,0,0);
%     RotAxisPos  = out.VerticalRotationAxisPosition;
%     %% Image dimensions.
%     [PixelsVer PixelsHor] = size(im1);
%     fprintf('Rot. axis pos.: %f.',RotAxisPos)
%     fprintf('Horz. center pos.: %g.',PixelsHor/2)
%     fprintf('Dim. of proj.: [ver x hor] = [%u %u].\n',PixelsVer,PixelsHor)
% end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% PAR FILE FOR RETRIEVED PHASES.
%Loop over different phase retrievals.
NumPhaseSets = 0;
for PhaseSubDirNum = 1:NumPhaseSubFolders
    PhaseSubPath = [PhasePath PhaseSubDirNames(PhaseSubDirNum).name];
    NumPhaseSets = NumPhaseSets +1;
    %% Set input file prefixes and output file name.
    FILE_PREFIX = sprintf('%s/%s/phase_',PhaseSubPath,tomoNum);
    OUTPUT_FILE = sprintf('%s%s_%s.vol',OutputPath,PhaseSubDirNames(PhaseSubDirNum).name,tomoNum);
    %% Open .par file.
    ParFileName = sprintf('%s.par',OUTPUT_FILE);
    fid = fopen(ParFileName,'wt');
    %% Write into .par file.
    fprintf(fid, ...
        ['# HST_SLAVE PARAMETER FILE\n' ...
        '# This parameter file was created automatically by Matlab script ''MakeParFile''\n' ...
        '\n' ...
        'RECONSTRUCT_FROM_SINOGRAMS = NO\n'...
        '\n'...
        '# Parameters defining the projection file series\n' ...
        'FILE_PREFIX = ' FILE_PREFIX '\n' ...
        'NUM_FIRST_IMAGE = ' num2str(NumOfFirstAndLastProjection(1),'%u') ' # No. of first projection file\n' ...
        'NUM_LAST_IMAGE  = ' num2str(NumOfFirstAndLastProjection(2),'%u') ' # No. of last projection file\n' ...
        'NUMBER_LENGTH_VARIES = NO\n' ...
        'LENGTH_OF_NUMERICAL_PART = 4 # No. of characters\n' ...
        'FILE_POSTFIX = .edf\n' ...
        'FILE_INTERVAL = 1 # Interval between input files\n' ...
        '\n' ...
        '# Parameters defining the projection file format\n' ...
        'NUM_IMAGE_1 = ' num2str(PixelsHor,'%u') ' # Number of pixels horizontally\n' ...
        'NUM_IMAGE_2 = ' num2str(PixelsVer,'%u') ' # Number of pixels vertically\n' ...
        'IMAGE_PIXEL_SIZE_1 = 10000 # \n' ...
        'IMAGE_PIXEL_SIZE_2 = 10000 # Is not used at all\n' ...
        '\n' ...
        '# Parameters defining background treatment\n' ...
        'SUBTRACT_BACKGROUND = NO # No background subtraction\n' ...
        'BACKGROUND_FILE = N.N. \n' ...
        '\n' ...
        '# Parameters defining flat-field treatment\n' ...
        'CORRECT_FLATFIELD = NO # No flat-field correction\n' ...
        'FLATFIELD_CHANGING = N.A.\n' ...
        'FLATFIELD_FILE = N.A.\n' ...
        'FF_PREFIX = N.A.\n' ...
        'FF_NUM_FIRST_IMAGE = N.A.\n' ...
        'FF_NUM_LAST_IMAGE = N.A.\n' ...
        'FF_NUMBER_LENGTH_VARIES = N.A.\n' ...
        'FF_LENGTH_OF_NUMERICAL_PART = N.A.\n' ...
        'FF_POSTFIX = N.A.\n' ...
        'FF_FILE_INTERVAL = N.A.\n' ...
        '\n' ...
        'TAKE_LOGARITHM = NO # Take log of projection values\n' ...
        '\n' ...
        '# Parameters defining experiment\n' ...
        'ANGLE_BETWEEN_PROJECTIONS = ' num2str(AngleBetweenProjections) ' # Increment angle in degrees\n' ...
        'ROTATION_VERTICAL = YES\n' ...
        'ROTATION_AXIS_POSITION = ' num2str(RotAxisPos,'%f') ' # Position in pixels\n' ...
        '\n' ...
        '# Parameters defining reconstruction\n' ...
        'OUTPUT_SINOGRAMS = NO # Output sinograms to files or not\n' ...
        'OUTPUT_RECONSTRUCTION = YES # Reconstruct and save or not\n' ...
        'START_VOXEL_1 = ' num2str(START_VOXEL_1) ' # X-start of reconstruction volume\n' ...
        'START_VOXEL_2 = ' num2str(START_VOXEL_2) ' # Y-start of reconstruction volume\n' ...
        'START_VOXEL_3 = ' num2str(START_VOXEL_3) ' # Z-start of reconstruction volume\n' ...
        'END_VOXEL_1 = ' num2str(END_VOXEL_1) ' # X-end of reconstruction volume\n' ...
        'END_VOXEL_2 = ' num2str(END_VOXEL_2) ' # Y-end of reconstruction volume\n' ...
        'END_VOXEL_3 = ' num2str(END_VOXEL_3) ' # Z-end of reconstruction volume\n' ...
        'OVERSAMPLING_FACTOR = 4 # 0 = Linear, 1 = Nearest pixel\n' ...
        'ANGLE_OFFSET = 0.000000 # Reconstruction rotation offset angle in degrees\n' ...
        'CACHE_KILOBYTES = 4096 # Size of processor cache (L2) per processor (KBytes)\n' ...
        'SINOGRAM_MEGABYTES = 800 # Maximum size of sinogram storage (megabytes)\n' ...
        '\n' ...
        '# Parameters defining output file / format\n' ...
        'OUTPUT_FILE = ' OUTPUT_FILE '\n' ...
        '# Reconstruction program options\n' ...
        'DISPLAY_GRAPHICS = NO # No images\n' ...
        '\n']);
    fclose(fid);
end
fprintf('PAR FILES CREATED FOR %u PHASE DATA SETS\n',NumPhaseSets)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
